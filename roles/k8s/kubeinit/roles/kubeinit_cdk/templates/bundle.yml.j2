---
# From: https://jaas.ai/charmed-kubernetes
# git clone https://github.com/charmed-kubernetes/bundle
# cd bundle
# make
description: A highly-available, production-grade Kubernetes cluster.
series: focal
machines:
{% for item in groups['all_cluster_nodes'] %}
  "{{ loop.index0 }}":
{% endfor %}
applications:
  containerd:
    annotations:
      gui-x: '475'
      gui-y: '800'
    charm: cs:~containers/containerd-178
    resources: {}
  easyrsa:
    annotations:
      gui-x: '90'
      gui-y: '420'
    charm: cs:~containers/easyrsa-420
    constraints: root-disk=8G
    num_units: 1
    resources:
      easyrsa: 5
    to:
{% if kubeinit_compute_count|int > 0 %}
    # This means that we will deploy the application
    # in the first worker node as the numbering starts
    # at 0. So, the count of controller nodes index will be
    # the first compute node.
    - "{{ kubeinit_controller_count }}"
{% else %}
    - "0"
{% endif %}
  etcd:
    annotations:
      gui-x: '800'
      gui-y: '420'
    charm: cs:~containers/etcd-634
    constraints: root-disk=8G
    num_units: {{ kubeinit_controller_count }}
    options:
      channel: 3.4/stable
    resources:
      core: 0
      etcd: 3
      snapshot: 0
    to:
{% for item in groups['all_controller_nodes'] %}
    - "{{ loop.index0 }}"
{% endfor %}
  flannel:
    annotations:
      gui-x: '475'
      gui-y: '605'
    charm: cs:~containers/flannel-597
    resources:
      flannel-amd64: 897
      flannel-arm64: 894
      flannel-s390x: 881
  kubeapi-load-balancer:
    annotations:
      gui-x: '450'
      gui-y: '250'
    charm: cs:~containers/kubeapi-load-balancer-844
    constraints: mem=4G root-disk=8G
    expose: true
    num_units: 1
    resources: {}
    to:
{% if kubeinit_compute_count|int > 0 %}
    # This means that we will deploy the application
    # in the first worker node as the numbering starts
    # at 0. So, the count of controller nodes index will be
    # the first compute node.
    - "{{ kubeinit_controller_count }}"
{% else %}
    - "0"
{% endif %}
  kubernetes-master:
    annotations:
      gui-x: '800'
      gui-y: '850'
    charm: cs:~containers/kubernetes-master-1078
    constraints: cores=2 mem=4G root-disk=16G
    num_units: {{ kubeinit_controller_count }}
    options:
      channel: 1.22/stable
    resources:
      cdk-addons: 0
      core: 0
      kube-apiserver: 0
      kube-controller-manager: 0
      kube-proxy: 0
      kube-scheduler: 0
      kubectl: 0
    to:
{% for item in groups['all_controller_nodes'] %}
    - "{{ loop.index0 }}"
{% endfor %}
{% if kubeinit_compute_count|int > 0 %}
  kubernetes-worker:
    annotations:
      gui-x: '90'
      gui-y: '850'
    charm: cs:~containers/kubernetes-worker-816
    constraints: cores=4 mem=4G root-disk=16G
    expose: true
    num_units: {{ kubeinit_compute_count }}
    options:
      channel: 1.22/stable
    resources:
      cni-amd64: 933
      cni-arm64: 924
      cni-s390x: 936
      core: 0
      kube-proxy: 0
      kubectl: 0
      kubelet: 0
    to:
{% for item in groups['all_compute_nodes'] | default([]) %}
    - "{{ loop.index0 + kubeinit_controller_count|int }}"
{% endfor %}
{% endif %}
relations:
- - kubernetes-master:loadbalancer-external
  - kubeapi-load-balancer:lb-consumers
- - kubernetes-master:loadbalancer-internal
  - kubeapi-load-balancer:lb-consumers
{% if kubeinit_compute_count|int > 0 %}
- - kubernetes-master:kube-control
  - kubernetes-worker:kube-control
{% endif %}
- - kubernetes-master:certificates
  - easyrsa:client
- - etcd:certificates
  - easyrsa:client
- - kubernetes-master:etcd
  - etcd:db
{% if kubeinit_compute_count|int > 0 %}
- - kubernetes-worker:certificates
  - easyrsa:client
{% endif %}
- - kubeapi-load-balancer:certificates
  - easyrsa:client
- - flannel:etcd
  - etcd:db
- - flannel:cni
  - kubernetes-master:cni
{% if kubeinit_compute_count|int > 0 %}
- - flannel:cni
  - kubernetes-worker:cni
- - containerd:containerd
  - kubernetes-worker:container-runtime
{% endif %}
- - containerd:containerd
  - kubernetes-master:container-runtime
